{
    "tasks": [
        {
            "label": "C++ Project: Show Valgrind Report",
            "command": "code",
            "args": [
                "-r",
                "${workspaceFolder}/build/debug/${workspaceFolderBasename}.valgrind"
            ],
            "dependsOn": "C++ Project: Make Valgrind Report",
            "problemMatcher": []
        },
        {
            "label": "C++ Project: Make Valgrind Report",
            "type": "shell",
            "command": "valgrind",
            "promptOnClose": false,
            "options": {
                "cwd": "${workspaceFolder}/build/debug"
            },
            "args": [
                "--leak-check=full",
                "--show-leak-kinds=all",
                "--track-origins=yes",
                "--verbose",
                "--log-file=${workspaceFolder}/build/debug/${workspaceFolderBasename}.valgrind",
                "${workspaceFolder}/build/debug/${workspaceFolderBasename}"
            ],
            "dependsOn": "C++ Project: CMake Build Debug"
        },
        {
            "label": "C++ Project: CMake Rebuild Debug",
            "dependsOn": [
                "C++ Project: CMake Clean Debug",
                "C++ Project: CMake Build Debug"
            ]
        },
        {
            "label": "C++ Project: CMake Clean Debug",
            "command": "cmake",
            "args": [
                "--build",
                "${workspaceFolder}/build/debug",
                "--target",
                "clean"
            ]
        },
        {
            "label": "C++ Project: CMake Build Debug",
            "command": "cmake",
            "args": [
                "--build",
                "build/debug",
                "--config",
                "Debug"
            ],
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "dependsOn": [
                "C++ Project: CMake Prepare Debug"
            ]
        },
        {
            "label": "C++ Project: CMake Prepare Debug",
            "command": "cmake",
            "args": [
                "-S",
                ".",
                "-B",
                "build/debug",
                "-DCMAKE_TOOLCHAIN_FILE=build/debug/build/Debug/generators/conan_toolchain.cmake",
                "-DCMAKE_BUILD_TYPE=Debug"
            ],
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "dependsOn": [
                "C++ Project: Create Build Dir Debug",
                "C++ Project: Conan Install Debug"
            ]
        },
        {
            "label": "C++ Project: Conan Install Debug",
            "command": "conan",
            "args": [
                "install",
                "build/debug/conanfile.txt",
                "--build=missing",
                "--settings",
                "build_type=Debug"
            ],
            "dependsOn": [
                "C++ Project: Conan Prepare Debug"
            ]
        },
        {
            "label": "C++ Project: Conan Prepare Debug",
            "linux": {
                "command": "cp",
                "args": [
                    "conanfile.txt",
                    "${workspaceFolder}/build/debug/"
                ]
            },
            "dependsOn": [
                "C++ Project: Create Build Dir Debug"
            ]
        },
        {
            "label": "C++ Project: Create Build Dir Debug",
            "linux": {
                "command": "mkdir",
                "args": [
                    "-p",
                    "${workspaceFolder}/build/debug"
                ]
            }
        },
        {
            "label": "C++ Project: CMake Rebuild Release",
            "dependsOn": [
                "C++ Project: CMake Clean Release",
                "C++ Project: CMake Build Release"
            ]
        },
        {
            "label": "C++ Project: CMake Clean Release",
            "command": "cmake",
            "args": [
                "--build",
                "${workspaceFolder}/build/release",
                "--target",
                "clean"
            ]
        },
        {
            "label": "C++ Project: CMake Build Release",
            "command": "cmake",
            "args": [
                "--build",
                "${workspaceFolder}/build/release",
                "--config",
                "Release"
            ],
            "options": {
                "cwd": "${workspaceFolder}/build/release"
            },
            "dependsOn": [
                "C++ Project: CMake Prepare Release"
            ],
            "problemMatcher": []
        },
        {
            "label": "C++ Project: CMake Prepare Release",
            "command": "cmake",
            "args": [
                "-S",
                ".",
                "-B",
                "${workspaceFolder}/build/release",
                "-DCMAKE_TOOLCHAIN_FILE=build/release/build/Release/generators/conan_toolchain.cmake",
                "-DCMAKE_BUILD_TYPE=Release"
            ],
            "dependsOn": [
                "C++ Project: Create Build Dir Release",
                "C++ Project: Conan Install Release"
            ]
        },
        {
            "label": "C++ Project: Conan Install Release",
            "command": "conan",
            "args": [
                "install",
                "build/release/conanfile.txt",
                "--build=missing",
                "--settings",
                "build_type=Release"
            ],
            "dependsOn": [
                "C++ Project: Conan Prepare Release"
            ]
        },
        {
            "label": "C++ Project: Conan Prepare Release",
            "linux": {
                "command": "cp",
                "args": [
                    "conanfile.txt",
                    "${workspaceFolder}/build/release/"
                ]
            },
            "dependsOn": [
                "C++ Project: Create Build Dir Release"
            ]
        },
        {
            "label": "C++ Project: Create Build Dir Release",
            "linux": {
                "command": "mkdir",
                "args": [
                    "-p",
                    "${workspaceFolder}/build/release"
                ]
            }
        }
    ],
    "version": "2.0.0"
}
