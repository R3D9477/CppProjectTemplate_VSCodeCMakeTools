{
    "C_Cpp.default.configurationProvider": "ms-vscode.cmake-tools",
    "C_Cpp.codeAnalysis.clangTidy.enabled": true,
    "C_Cpp.codeAnalysis.runAutomatically": true,
    "C_Cpp.debugShortcut": false,
    "C_Cpp.codeFolding": "enabled",
    "cmake.configureOnOpen": false,
    "cmake.buildBeforeRun": false,
    "cmake.buildDirectory": "${workspaceFolder}/build/${command:cmake.buildType}",
    "cmake.configureArgs": [
        "-DCMAKE_TOOLCHAIN_FILE=${workspaceFolder}/build/${command:cmake.buildType}/build/${command:cmake.buildType}/generators/conan_toolchain.cmake",
    ],
    "cmake.environment": {
        "CLICOLOR_FORCE": "1"
    },
    "[cpp]": {
        "editor.defaultFormatter": "xaver.clang-format",
        "editor.defaultFoldingRangeProvider": "xaver.clang-format"
    },
    "files.associations": {
        "iostream": "cpp"
    },
    "task.saveBeforeRun": "always",
    "files.autoSave": "off",
    "editor.formatOnType": true,
    "editor.formatOnPaste": false,
    "editor.formatOnSave": true,
    "editor.formatOnSaveMode": "file",
    "editor.renderWhitespace": "trailing",
    "files.insertFinalNewline": true,
    "files.trimFinalNewlines": true,
    "workbench.editor.enablePreview": true,
    "workbench.editor.enablePreviewFromQuickOpen": false,
    "workbench.colorCustomizations": {
        "statusBar.background": "#505050",
        "statusBar.foreground": "#ffffff"
    },
    "multiCommand.commands": [
        {
            "command": "multiCommand.do_nothing",
            "sequence": [],
        },
        {
            "command": "multiCommand.return_any_not_empty_result",
            "sequence": [
                "cmake.buildKit"
            ],
        },
        {
            "command": "multiCommand.close_current_editor_tab",
            "sequence": [
                "workbench.action.closeActiveEditor",
                "multiCommand.return_any_not_empty_result"
            ],
        },
        {
            "command": "multiCommand.cmake_buildKit",
            "sequence": [
                "cmake.selectKit",
                "multiCommand.return_any_not_empty_result"
            ],
        },
        {
            "command": "multiCommand.editor_foldLevel1",
            "sequence": [
                "editor.unfoldAll",
                "editor.foldLevel1"
            ],
        },
        {
            "command": "multiCommand.editor_foldLevel2",
            "sequence": [
                "editor.unfoldAll",
                "editor.foldLevel2"
            ],
        },
        {
            "command": "multiCommand.editor_foldLevel3",
            "sequence": [
                "editor.unfoldAll",
                "editor.foldLevel3"
            ],
        },
        {
            "command": "multiCommand.editor_foldLevel4",
            "sequence": [
                "editor.unfoldAll",
                "editor.foldLevel4"
            ],
        },
        {
            "command": "multiCommand.run_task_CMake_StartLiveProcMon",
            "sequence": [
                {
                    "command": "workbench.action.tasks.runTask",
                    "args": "$(telescope) LiveProcMon: Start Monitoring"
                }
            ]
        },
        {
            "command": "multiCommand.run_task_CMake_StopLiveProcMon",
            "sequence": [
                {
                    "command": "workbench.action.tasks.runTask",
                    "args": "$(stop) LiveProcMon: Stop Monitoring"
                }
            ]
        },
        {
            "command": "multiCommand.run_task_CMake_ShowValgrindMemcheckReport",
            "sequence": [
                {
                    "command": "workbench.action.tasks.runTask",
                    "args": "$(report) Valgrind: Show Memcheck Report"
                }
            ]
        },
        {
            "command": "multiCommand.run_task_CMake_ShowValgrindCachegrindReport",
            "sequence": [
                {
                    "command": "workbench.action.tasks.runTask",
                    "args": "$(report) Valgrind: Show Cachegrind Report"
                }
            ]
        },
        {
            "command": "multiCommand.run_task_CMake_ShowValgrindCallgrindReport",
            "sequence": [
                {
                    "command": "workbench.action.tasks.runTask",
                    "args": "$(report) Valgrind: Show Callgrind Report"
                }
            ]
        },
        {
            "command": "multiCommand.run_task_CMake_CurrentFileRun",
            "sequence": [
                {
                    "command": "workbench.action.tasks.runTask",
                    "args": "$(rocket) CppRunCurrentFile: Run"
                }
            ]
        },
    ],
    "graphviz-interactive-preview.openAutomatically": true,
    "graphviz-interactive-preview.preserveFocus": true,
    "autoHide.autoHideLeftSideBar": false,
    "workbench.editor.showTabs": "single",
    "CustomizeToolbar.buttonConfig": [
        {
            "name": "Fold Level 4",
            "icon": "folding-collapsed",
            "command_vscode": "multiCommand.editor_foldLevel4"
        },
        {
            "name": "Fold Level 3",
            "icon": "folding-collapsed",
            "command_vscode": "multiCommand.editor_foldLevel3"
        },
        {
            "name": "Fold Level 2",
            "icon": "folding-collapsed",
            "command_vscode": "multiCommand.editor_foldLevel2"
        },
        {
            "name": "Fold Level 1",
            "icon": "folding-collapsed",
            "command_vscode": "multiCommand.editor_foldLevel1"
        },
        {
            "name": "Unfold All",
            "icon": "folding-expanded",
            "command_vscode": "editor.unfoldAll"
        },
        {
            "name": "Separator",
            "icon": "kebab-vertical",
            "command_vscode": "multiCommand.do_nothing",
        },
    ],
    "activitusbar.activeColour": "#ffffff",
    "activitusbar.inactiveColour": "#ffffff",
    "activitusbar.views": [
        {
            "codicon": "kebab-vertical"
        },
        {
            "name": "command.workbench.action.debug.start",
            "codicon": "bug",
            "tooltip": "CMake: Debug"
        },
        {
            "name": "command.multiCommand.run_task_CMake_StartLiveProcMon",
            "codicon": "telescope",
            "tooltip": "LiveProcMon: Start Monitoring",
        },
        {
            "name": "command.multiCommand.run_task_CMake_StopLiveProcMon",
            "codicon": "stop",
            "tooltip": "LiveProcMon: Stop Monitoring"
        },
        {
            "name": "command.multiCommand.run_task_CMake_ShowValgrindMemcheckReport",
            "codicon": "report",
            "tooltip": "Valgrind: Show Memcheck Report"
        },
        {
            "name": "command.multiCommand.run_task_CMake_ShowValgrindCachegrindReport",
            "codicon": "report",
            "tooltip": "Valgrind: Show Cachegrind Report"
        },
        {
            "name": "command.multiCommand.run_task_CMake_ShowValgrindCallgrindReport",
            "codicon": "report",
            "tooltip": "Valgrind: Show Callgrind Report"
        },
        {
            "name": "command.multiCommand.run_task_CMake_CurrentFileRun",
            "codicon": "rocket",
            "tooltip": "CppRunCurrentFile: Run"
        },
        {
            "codicon": "kebab-vertical"
        },
    ],
    "LiveProcMon": {
        "liveProcMonTemplatePath": "${workspaceFolder}/.vscode/liveprocmon/liveprocmon_cpumem.py_template",
        "executablePath": "${command:cmake.launchTargetPath}",
        "buildFolder": "${workspaceFolder}/build_debug",
        "port": 10001,
        "maxPoints": 3600,
        "collectDelayMs": 123,
        "generatePlotDelayMs": 789,
        "updateFrequencyMs": 1234,
        "plotWidthInch": 7.5,
        "plotHeightInch": 8.5,
    },
    "CppRunCurrentFile": {
        "cpp_compiler_path": "clang++",
        "cpp_compiler_arg_cpp_standard": "-std=c++17",
        "cpp_compiler_arg_optimization_level": "-O0",
        "cpp_debugger_patth": "lldb",
        "build_directory": "${workspaceFolder}/build/CppRunCurrentFile"
    }
}
